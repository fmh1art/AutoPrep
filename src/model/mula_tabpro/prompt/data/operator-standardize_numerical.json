{"description": "The operator `standardize_numerical` aims to standardize the numerical column. We use the operator by specifying the arguments `column` and the lambda function `func`.", "demos": ["/*\n\"notes\": \"5000\" | \"5000\" | \"10,000\" | \"10,000\" | \"10000\" | \"10,000\"\n*/\nRequirement: lease standardize the column `notes` to numerical format.\nOperator: ```standardize_numerical(df, column='notes', func=lambda x: int(x.replace(',', '')))```", "/*\n\"score\": \"25 pt\" | \"30 pt\" | \"20 pt\" | \"15 pt\" | \"10 pt\"\n*/\nRequirement: please standardize the column `score` to numerical format.\nOperator: ```standardize_numerical(df, score='date', func=lambda x: int(x.replace('pt', '').strip()))```", "/*\n\"notes\": 1 episode | 1 episode | 119 episodes | 13 episodes | voice<br>3 episodes | episode: \\drugs are bad | [n.a.] | season 3 episode 24 'to tell the truth'\n*/\nRequirement: please standardize the column `notes` to numerical format.\nOperator: ```standardize_numerical(df, column='notes', func=lambda x: int(re.search(r'\\d+ ', x).group() if 'episodes' in x else 1 if 'episode' in x else '[n.a.]'))```"]}