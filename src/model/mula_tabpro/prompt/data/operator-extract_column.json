{"description": "The operator `extract_column` aims to extract information from a column.", "demos": ["/*\n\"career_win_loss\": \"22-88\" | \"nan\" | \"17-20\" | \"11-14\"\n*/\nGiven the column `career_win_loss` please generate a new column to answer: how many wins?\nOperator: ```extract_column(df, new_column=\"win_number\", func=lambda x: int(str(x['career_win_loss']).split('-')[0]) if '-' in str(x['career_win_loss']) else '[n.a.]')```", "/*\n\"prominence\": \"10080 ft; 3072 m\" | \"1677 ft; 511 m\" | \"7196 ft; 2193 m\" | 10000 | 10000 | 10000\n*/\nGiven the column `prominence` please generate a new column to answer: prominence in ft?\nOperator: ```extract_column(df, new_column=\"prominence_ft\", func=lambda x: int(str(x['prominence']).split(';')[0].split(' ')[0]) if ';' in str(x['prominence']) else '[n.a.]')```"]}